{"version":3,"sources":["contexts/MyContext.js","images/logo.jpeg","components/Login.js","components/Register.js","components/Home.js","App.js","index.js"],"names":["MyContext","createContext","Axios","axios","create","baseURL","MyContextProvider","state","showLogin","isAuth","theUser","toggleNav","setState","logoutUser","localStorage","removeItem","registerUser","user","a","post","name","email","password","register","data","loginUser","login","isLoggedIn","loginToken","getItem","defaults","headers","common","get","success","contextValue","rootState","this","Provider","value","props","children","Component","Login","useContext","initialState","userInfo","errorMsg","successMsg","useState","onChangeValue","e","target","submitForm","event","preventDefault","token","setItem","message","className","width","height","src","logo","alt","id","onSubmit","noValidate","type","required","placeholder","onChange","onClick","style","position","bottom","textAlign","background","color","padding","fontSize","Register","proj4","defs","sLayer","basemaps","initialMap","proj31700","getProjection","layers","zoom","center","olProj","setselectedFeature","layersStyle","getId","indexOf","Style","image","Icon","scale","hoverStyle","length","stroke","Stroke","lineDash","lineDashOffset","text","Text","font","overflow","fill","Fill","clickStyle","acostamente","VectorLayer","title","visible","source","VectorSource","format","GeoJSON","url","strategy","bboxStrategy","anexe_and","borne_estimate","borne_existente","imbracaminte_drum","indicatoare_rutiere","intersectii_cfr","intersectii_dr","limite_pug_bacau","limite_uat_bacau","localitati_traversate","parapete","podete","poduri_","santuri","traseu_info","zid_sprijin","CircleStyle","radius","labelStyle","backgroundFill","textBaseline","offsetY","RegularShape","points","angle","Math","PI","displacement","tipStyle","offsetX","modifyStyle","segmentStyle","segmentStyles","formatLength","line","getLength","round","drawSource","modify","Modify","styleFunction","feature","segments","drawType","tip","point","label","styles","geometry","getGeometry","getType","getInteriorPoint","polygon","area","getArea","formatArea","LineString","getCoordinates","Point","getLastCoordinate","count","forEachSegment","b","segment","push","clone","segmentPoint","getCoordinateAt","setGeometry","getText","setText","getOverlay","getSource","getFeatures","drawLayer","displayInLayerSwitcher","Home","map","setMap","mapElement","useRef","current","useEffect","console","log","LayerGroup","openInLayerSwitcher","TileLayer","baseLayer","OSM","XYZ","tileSize","preload","Infinity","BingMaps","key","imagerySet","window","location","hash","parts","replace","split","parseFloat","Map","view","View","projection","controls","defaultControls","extend","on","evt","hit","forEachFeatureAtPixel","pixel","layer","getTargetElement","cursor","shouldUpdate","getView","getCenter","getZoom","toFixed","getRotation","rotation","history","pushState","addEventListener","setCenter","setZoom","setRotation","myModule","createLayerSwitcher","createScale","createProgressBar","marginTop","ref","left","createSearch","search","SearchNominatim","reverse","addControl","clear","geojson","f","readFeature","dataProjection","featureProjection","addFeature","resolution","getResolutionForExtent","getExtent","getSize","getZoomForResolution","olExtent","setTimeout","animate","min","coordinate","max","createSideMenu","sideMenu","Overlay","closeBox","content","$","t","Toggle","html","onToggle","toggle","createCustomButtons","createOverview","overview","Overview","Scale","editable","createHoverAndSelect","hoverCtrl","Select","condition","pointerMove","selectCtrl","click","addInteraction","selected","progressBar","pb","getLayers","array_","createGPS","gps","GeolocationButton","delay","here","Popup","positioning","addOverlay","show","hide","switcher","LayerSwitcher","li","querySelector","attr","append","createOverlayMenu","menu","menu_control","menu_switcher_header","menu_switcher","menu_info","createDefaultActions","selectSingleClick","selectClick","selectPointerMove","createSelectAttributes","ext_Select","property","val","createPopupOverlay","placemark","stopEvent","Placemark","forEach","p","drag","ext_Drag","overlays","overlay","createMeasures","drawLine","Draw","mSource","mLayer","addLayer","drawPoly","setActive","tooltip","Tooltip","setFeature","bind","removeFeature","createLegend","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76a60828.chunk.js","sourcesContent":["import React, { createContext,Component } from \"react\";\r\nimport axios from 'axios'\r\nexport const MyContext = createContext();\r\n\r\n// Define the base URL\r\nconst Axios = axios.create({\r\n    baseURL: '../AdminApi/',\r\n});\r\n\r\nclass MyContextProvider extends Component{\r\n    constructor(){\r\n        super();\r\n        this.isLoggedIn();\r\n    }\r\n\r\n    // Root State\r\n    state = {\r\n        showLogin:true,\r\n        isAuth:false,\r\n        theUser:null,\r\n    }\r\n    \r\n    // Toggle between Login & Signup page\r\n    toggleNav = () => {\r\n        const showLogin = !this.state.showLogin;\r\n        this.setState({\r\n            ...this.state,\r\n            showLogin\r\n        })\r\n    }\r\n\r\n    // On Click the Log out button\r\n    logoutUser = () => {\r\n        localStorage.removeItem('loginToken');\r\n        this.setState({\r\n            ...this.state,\r\n            isAuth:false\r\n        })\r\n    }\r\n\r\n    registerUser = async (user) => {\r\n\r\n        // Sending the user registration request\r\n        const register = await Axios.post('register.php',{\r\n            name:user.name,\r\n            email:user.email,\r\n            password:user.password \r\n        });\r\n\r\n        return register.data;\r\n    }\r\n\r\n\r\n    loginUser = async (user) => {\r\n\r\n        // Sending the user Login request\r\n        const login = await Axios.post('login.php',{\r\n            email:user.email,\r\n            password:user.password\r\n        });\r\n        return login.data;\r\n    }\r\n\r\n    // Checking user logged in or not\r\n    isLoggedIn = async () => {\r\n        const loginToken = localStorage.getItem('loginToken');\r\n\r\n        // If inside the local-storage has the JWT token\r\n        if(loginToken){\r\n\r\n            //Adding JWT token to axios default header\r\n            Axios.defaults.headers.common['Authorization'] = 'bearer '+loginToken;\r\n\r\n            // Fetching the user information\r\n            const {data} = await Axios.get('userinfo.php');\r\n\r\n            // If user information is successfully received\r\n            if(data.success && data.user){\r\n                this.setState({\r\n                    ...this.state,\r\n                    isAuth:true,\r\n                    theUser:data.user\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const contextValue = {\r\n            rootState:this.state,\r\n            toggleNav:this.toggleNav,\r\n            isLoggedIn:this.isLoggedIn,\r\n            registerUser:this.registerUser,\r\n            loginUser:this.loginUser,\r\n            logoutUser:this.logoutUser\r\n        }\r\n        return(\r\n            <MyContext.Provider value={contextValue}>\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyContextProvider;","export default __webpack_public_path__ + \"static/media/logo.cdd811b4.jpeg\";","import React, {useContext, useState} from 'react'\r\nimport {MyContext} from '../contexts/MyContext'\r\nimport logo from \"../images/logo.jpeg\"\r\n\r\nfunction Login(){\r\n\r\n    const {toggleNav,loginUser,isLoggedIn} = useContext(MyContext);\r\n\r\n    const initialState = {\r\n        userInfo:{\r\n            email:'',\r\n            password:'',\r\n        },\r\n        errorMsg:'',\r\n        successMsg:'',\r\n    }\r\n\r\n    const [state,setState] = useState(initialState);\r\n\r\n    // On change input value (email & password)\r\n    const onChangeValue = (e) => {\r\n        setState({\r\n            ...state,\r\n            userInfo:{\r\n                ...state.userInfo,\r\n                [e.target.name]:e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    // On Submit Login From\r\n    const submitForm = async (event) => {\r\n        event.preventDefault();\r\n        const data = await loginUser(state.userInfo);\r\n        if(data.success && data.token){\r\n            setState({\r\n                ...initialState,\r\n            });\r\n            localStorage.setItem('loginToken', data.token);\r\n            await isLoggedIn();\r\n        }\r\n        else{\r\n            setState({\r\n                ...state,\r\n                successMsg:'',\r\n                errorMsg:data.message\r\n            });\r\n        }\r\n    }\r\n\r\n    // Show Message on Error or Success\r\n    let successMsg = '';\r\n    let errorMsg = '';\r\n    if(state.errorMsg){\r\n        errorMsg = <div className=\"error-msg\">{state.errorMsg}</div>;\r\n    }\r\n    if(state.successMsg){\r\n        successMsg = <div className=\"success-msg\">{state.successMsg}</div>;\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"maincontainer\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-primary bg-primary sticky-top d-flex justify-content-between \">\r\n                    <div className=\"navbar-nav col-2 align-items-start \">\r\n                        <div className=\"text-white bg_color_primary_light rounded-circle p-2\">\r\n                            <img width={30} height={30} src={logo} alt=\"logo\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-4 justify-content-center\">\r\n                        <div className=\"navbar-nav ml-auto text-white\">\r\n                            CADSYS - ROADS\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"justify-content-center\" id=\"navbarNavDropdown\">\r\n                        <div className=\"navbar-nav ml-auto text-white\">\r\n                            LOGO\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"container mb-5 mt-5\">\r\n                    <div className=\"_loginRegister\">\r\n                        <h1>Login</h1>\r\n                        <form onSubmit={submitForm} noValidate>\r\n                            <div className=\"form-control\">\r\n                                <label>Email</label>\r\n                                <input name=\"email\" type=\"email\" required placeholder=\"Enter your email\" value={state.userInfo.email} onChange={onChangeValue} />\r\n                            </div>\r\n                            <div className=\"form-control\">\r\n                                <label>PassWord</label>\r\n                                <input name=\"password\" type=\"password\" required placeholder=\"Enter your password\" value={state.userInfo.password} onChange={onChangeValue} />\r\n                            </div>\r\n                            {errorMsg}\r\n                            {successMsg}\r\n                            <div className=\"form-control\">\r\n                                <button type=\"submit\">Login</button>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"form-control _navBtn\">\r\n                            <button onClick={toggleNav}>Register</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n            <div style={{ position: 'absolute', bottom: 0, width: \"100vw\", textAlign: 'center', background: \"#0d6efd\", color: \"white\", padding: \"3px\", fontSize: \"small\" }}>\r\n                © Copyright 2021-2022\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useContext, useState } from 'react'\r\nimport { MyContext } from '../contexts/MyContext'\r\nimport logo from \"../images/logo.jpeg\"\r\n\r\nfunction Register() {\r\n    const { toggleNav, registerUser } = useContext(MyContext);\r\n    const initialState = {\r\n        userInfo: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n        },\r\n        errorMsg: '',\r\n        successMsg: '',\r\n    }\r\n    const [state, setState] = useState(initialState);\r\n\r\n    // On Submit the Registration Form\r\n    const submitForm = async (event) => {\r\n        event.preventDefault();\r\n        const data = await registerUser(state.userInfo);\r\n        if (data.success) {\r\n            setState({\r\n                ...initialState,\r\n                successMsg: data.message,\r\n            });\r\n        }\r\n        else {\r\n            setState({\r\n                ...state,\r\n                successMsg: '',\r\n                errorMsg: data.message\r\n            });\r\n        }\r\n    }\r\n\r\n    // On change the Input Value (name, email, password)\r\n    const onChangeValue = (e) => {\r\n        setState({\r\n            ...state,\r\n            userInfo: {\r\n                ...state.userInfo,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    // Show Message on Success or Error\r\n    let successMsg = '';\r\n    let errorMsg = '';\r\n    if (state.errorMsg) {\r\n        errorMsg = <div className=\"error-msg\">{state.errorMsg}</div>;\r\n    }\r\n    if (state.successMsg) {\r\n        successMsg = <div className=\"success-msg\">{state.successMsg}</div>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"maincontainer\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-primary bg-primary sticky-top d-flex justify-content-between \">\r\n                    <div className=\"navbar-nav col-2 align-items-start \">\r\n                        <div className=\"text-white bg_color_primary_light rounded-circle p-2\">\r\n                            <img width={30} height={30} src={logo} alt=\"logo\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-4 justify-content-center\">\r\n                        <div className=\"navbar-nav ml-auto text-white\">\r\n                            CADSYS - ROADS\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"justify-content-center\" id=\"navbarNavDropdown\">\r\n                        <div className=\"navbar-nav ml-auto text-white\">\r\n                            LOGO\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"container mb-5 mt-5\">\r\n                    <div className=\"_loginRegister\">\r\n                        <h1>Sign Up</h1>\r\n                        <form onSubmit={submitForm} noValidate>\r\n                            <div className=\"form-control\">\r\n                                <label>Full Name</label>\r\n                                <input name=\"name\" required type=\"text\" value={state.userInfo.name} onChange={onChangeValue} placeholder=\"Enter your name\" />\r\n                            </div>\r\n                            <div className=\"form-control\">\r\n                                <label>Email</label>\r\n                                <input name=\"email\" required type=\"email\" value={state.userInfo.email} onChange={onChangeValue} placeholder=\"Enter your email\" />\r\n                            </div>\r\n                            <div className=\"form-control\">\r\n                                <label>Password</label>\r\n                                <input name=\"password\" required type=\"password\" value={state.userInfo.password} onChange={onChangeValue} placeholder=\"Enter your password\" />\r\n                            </div>\r\n                            {errorMsg}\r\n                            {successMsg}\r\n                            <div className=\"form-control\">\r\n                                <button type=\"submit\">Sign Up</button>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"_navBtn\">\r\n                            <button onClick={toggleNav}>Login</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n            <div style={{ position: 'absolute', bottom: 0, width: \"100vw\", textAlign: 'center', background: \"#0d6efd\", color: \"white\", padding: \"3px\", fontSize: \"small\" }}>\r\n                © Copyright 2021-2022\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register","import React, { useContext, useState, useEffect, useRef } from 'react'\r\nimport { MyContext } from '../contexts/MyContext'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\n// Importing the Login & Register Componet\r\nimport Login from './Login'\r\nimport Register from './Register'\r\nimport logo from \"../images/logo.jpeg\"\r\n\r\n/* Openlayers */\r\nimport Map from 'ol/Map'\r\nimport BingMaps from 'ol/source/BingMaps';\r\nimport View from 'ol/View'\r\nimport TileLayer from 'ol/layer/Tile'\r\nimport { OSM, XYZ } from 'ol/source';\r\nimport { defaults as defaultControls } from 'ol/control';\r\nimport VectorSource from \"ol/source/Vector\";\r\nimport VectorLayer from \"ol/layer/Vector\";\r\nimport {\r\n    Icon,\r\n    Circle as CircleStyle,\r\n    Fill,\r\n    RegularShape,\r\n    Stroke,\r\n    Style,\r\n    Text,\r\n} from 'ol/style';\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\nimport * as olExtent from 'ol/extent';\r\nimport { Select, Draw, Modify } from \"ol/interaction/\";\r\nimport tileGrid from \"ol/tilegrid/TileGrid\";\r\nimport proj4 from 'proj4';\r\nimport { get as getProjection } from 'ol/proj';\r\nimport { register } from 'ol/proj/proj4';\r\nimport LayerGroup from 'ol/layer/Group';\r\nimport { tile as tileStrategy } from 'ol/loadingstrategy';\r\nimport { LineString, Point } from 'ol/geom';\r\nimport { getArea, getLength } from 'ol/sphere';\r\nimport MVT from \"ol/format/MVT\";\r\nimport VectorTileLayer from \"ol/layer/VectorTile\";\r\nimport VectorTileSource from \"ol/source/VectorTile\";\r\nimport mbStyleFunction from 'ol-mapbox-style/dist/stylefunction';\r\nimport * as olProj from 'ol/proj';\r\nimport { bbox as bboxStrategy } from 'ol/loadingstrategy';\r\nimport TileWMS from 'ol/source/TileWMS';\r\nimport { altKeyOnly, click, pointerMove } from 'ol/events/condition';\r\nimport $ from \"jquery\";\r\n\r\n/* ol-ext */\r\nimport SearchNominatim from \"ol-ext/control/SearchNominatim\";\r\nimport LayerSwitcher from \"ol-ext/control/LayerSwitcher\";\r\nimport Overview from \"ol-ext/control/Overview\";\r\nimport pb from 'ol-ext/control/ProgressBar';\r\nimport Overlay from \"ol-ext/control/Overlay\";\r\nimport Popup from \"ol-ext/overlay/Popup\";\r\nimport Tooltip from \"ol-ext/overlay/Tooltip\";\r\nimport Placemark from \"ol-ext/overlay/Placemark\";\r\nimport Toggle from \"ol-ext/control/Toggle\";\r\nimport ext_Select from \"ol-ext/control/Select\";\r\nimport Scale from \"ol-ext/control/Scale\";\r\nimport ext_Drag from \"ol-ext/interaction/DragOverlay\";\r\nimport GeolocationButton from \"ol-ext/control/GeolocationButton\";\r\n\r\n/* Stylesheets */\r\nimport 'ol/ol.css';\r\nimport 'ol-ext/dist/ol-ext.css'\r\nimport './style.css'\r\n\r\n// Define the base URL\r\nconst Axios = axios.create({\r\n    baseURL: 'http://localhost/AdminApi/',\r\n});\r\n\r\nvar mapboxKey = \"pk.eyJ1IjoiZGh5ZmIiLCJhIjoiY2o4M3F6MzJpMDBoejMybXBhZGF4aXJjOCJ9.rqAE8kSRfPbAdypH3Ydx-g\";\r\n\r\nproj4.defs(\"EPSG:31700\", \"+proj=sterea +lat_0=46 +lon_0=25 +k=0.99975 +x_0=500000 +y_0=500000 +ellps=krass +units=m +no_defs\");\r\nregister(proj4);\r\n\r\nconst proj31700 = getProjection('EPSG:31700');\r\nlet sLayer;\r\nlet layers = [];\r\nlet basemaps;\r\nlet draw;\r\nlet initialMap;\r\nlet zoom = 13;\r\nlet center = olProj.fromLonLat([27.0336212, 46.3428481], proj31700);\r\nlet rotation = 0;\r\nlet selectedBaseMap;\r\nlet setselectedFeature = [];\r\n\r\nconst layersStyle = function (e) {\r\n    if (e.getId().indexOf(\"borne_estimate\") !== -1) {\r\n        return new Style({\r\n            image: new Icon({\r\n                src: './icons/1.png',\r\n                scale: [0.05, 0.05],\r\n            })\r\n        })\r\n    }\r\n    if (e.getId().indexOf(\"borne_existente\") !== -1) {\r\n        return new Style({\r\n            image: new Icon({\r\n                src: './icons/2.png',\r\n                scale: [0.05, 0.05],\r\n            })\r\n        })\r\n    }\r\n    if (e.getId().indexOf(\"indicatoare_rutiere\") !== -1) {\r\n        return new Style({\r\n            image: new Icon({\r\n                src: './icons/3.png',\r\n                scale: [0.05, 0.05],\r\n            })\r\n        })\r\n    }\r\n    if (e.getId().indexOf(\"intersectii_cfr\") !== -1) {\r\n        return new Style({\r\n            image: new Icon({\r\n                src: './icons/4.png',\r\n                scale: [0.05, 0.05],\r\n            })\r\n        })\r\n    }\r\n    if (e.getId().indexOf(\"intersectii_dr\") !== -1) {\r\n        return new Style({\r\n            image: new Icon({\r\n                src: './icons/5.png',\r\n                scale: [0.05, 0.05],\r\n            })\r\n        })\r\n    }\r\n    if (e.getId().indexOf(\"podete\") !== -1) {\r\n        return new Style({\r\n            image: new Icon({\r\n                src: './icons/6.png',\r\n                scale: [0.05, 0.05],\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nconst hoverStyle = function (e) {\r\n    try {\r\n        if (setselectedFeature.length > 0) {\r\n            if (setselectedFeature[0].getId() == e.getId())\r\n                return [\r\n                    new Style({\r\n                        stroke: new Stroke({\r\n                            color: [255, 255, 255, 1],\r\n                            width: 4,\r\n                            lineDash: [4, 8],\r\n                            lineDashOffset: 6\r\n                        })\r\n                    }),\r\n                    new Style({\r\n                        stroke: new Stroke({\r\n                            color: [255, 0, 0, 1],\r\n                            width: 4,\r\n                            lineDash: [10, 14]\r\n                        })\r\n                    }),\r\n                    new Style({\r\n                        text: new Text({\r\n                            text: e.get('plan_'),\r\n                            font: 'bold 14px Calibri',\r\n                            overflow: true,\r\n                            fill: new Fill({\r\n                                color: '#000',\r\n                            }),\r\n                            stroke: new Stroke({\r\n                                color: '#fff',\r\n                                width: 5,\r\n                            }),\r\n                        }),\r\n                    })\r\n                ]\r\n            else\r\n                return new Style({\r\n                    stroke: new Stroke({\r\n                        color: \"red\",\r\n                        width: 2\r\n                    }),\r\n                    text: new Text({\r\n                        text: e.get('plan_'),\r\n                        font: 'bold 14px Calibri',\r\n                        overflow: true,\r\n                        fill: new Fill({\r\n                            color: '#fff',\r\n                        }),\r\n                        stroke: new Stroke({\r\n                            color: '#000',\r\n                            width: 5,\r\n                        }),\r\n                    }),\r\n                })\r\n        }\r\n        else\r\n            return new Style({\r\n                stroke: new Stroke({\r\n                    color: \"red\",\r\n                    width: 2\r\n                }),\r\n                text: new Text({\r\n                    text: e.get('plan_'),\r\n                    font: 'bold 14px Calibri',\r\n                    overflow: true,\r\n                    fill: new Fill({\r\n                        color: '#fff',\r\n                    }),\r\n                    stroke: new Stroke({\r\n                        color: '#000',\r\n                        width: 5,\r\n                    }),\r\n                }),\r\n            })\r\n        // }\r\n        // }\r\n    } catch (e) { }\r\n}\r\n\r\nconst clickStyle = function (e) {\r\n    try {\r\n        if (e.getId().indexOf(\"boundaries\") !== -1) {\r\n            return [\r\n                new Style({\r\n                    stroke: new Stroke({\r\n                        color: [255, 255, 255, 1],\r\n                        width: 4,\r\n                        lineDash: [4, 8],\r\n                        lineDashOffset: 6\r\n                    })\r\n                }),\r\n                new Style({\r\n                    stroke: new Stroke({\r\n                        color: [255, 0, 0, 1],\r\n                        width: 4,\r\n                        lineDash: [10, 14]\r\n                    })\r\n                }),\r\n                new Style({\r\n                    text: new Text({\r\n                        text: e.get('plan_'),\r\n                        font: 'bold 14px Calibri',\r\n                        overflow: true,\r\n                        fill: new Fill({\r\n                            color: '#000',\r\n                        }),\r\n                        stroke: new Stroke({\r\n                            color: '#fff',\r\n                            width: 5,\r\n                        }),\r\n                    }),\r\n                })\r\n            ]\r\n        }\r\n    } catch (e) { }\r\n}\r\n\r\nlet acostamente = new VectorLayer({\r\n    title: \"Acostamente\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=acostamente',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: new Style({\r\n        // fill: new Fill({\r\n        //     color: 'rgba(255, 255, 255, 0.5)',\r\n        // }),\r\n        stroke: new Stroke({\r\n            color: '#ffcc33',\r\n            width: 2,\r\n        })\r\n    })\r\n}), anexe_and = new VectorLayer({\r\n    title: \"Anexe And\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=anexe_and',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: new Style({\r\n        fill: new Fill({\r\n            color: 'rgba(255, 255, 255, 0.5)',\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#ff5599',\r\n            width: 2,\r\n        })\r\n    })\r\n}), borne_estimate = new VectorLayer({\r\n    title: \"Borne Estimate\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=borne_estimate',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: layersStyle\r\n}), borne_existente = new VectorLayer({\r\n    title: \"Borne Existente\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=borne_existente',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: layersStyle\r\n}), imbracaminte_drum = new VectorLayer({\r\n    title: \"Imbracaminte Drum\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=imbracaminte_drum',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: new Style({\r\n        // fill: new Fill({\r\n        //     color: 'rgba(255, 255, 255, 0.5)',\r\n        // }),\r\n        stroke: new Stroke({\r\n            color: '#ff0011',\r\n            width: 2,\r\n        })\r\n    })\r\n}), indicatoare_rutiere = new VectorLayer({\r\n    title: \"Indicatoare Rutiere\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=indicatoare_rutiere',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: layersStyle\r\n}), intersectii_cfr = new VectorLayer({\r\n    title: \"Intersectii Cfr\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=intersectii_cfr',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: layersStyle\r\n}), intersectii_dr = new VectorLayer({\r\n    title: \"Intersectii Dr\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=intersectii_dr',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: layersStyle\r\n}), limite_pug_bacau = new VectorLayer({\r\n    title: \"Limite Pug Bacau\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=limite_pug_bacau',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: new Style({\r\n        fill: new Fill({\r\n            color: 'rgba(255, 255, 255, 0.5)',\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#f0f0f0',\r\n            width: 2,\r\n        })\r\n    })\r\n}), limite_uat_bacau = new VectorLayer({\r\n    title: \"Limite Uat Bacau\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=limite_uat_bacau',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: new Style({\r\n        fill: new Fill({\r\n            color: 'rgba(255, 255, 255, 0.5)',\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#0f0f0f',\r\n            width: 2,\r\n        })\r\n    })\r\n}), localitati_traversate = new VectorLayer({\r\n    title: \"Localitati Traversate\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=localitati_traversate',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: new Style({\r\n        // fill: new Fill({\r\n        //     color: 'rgba(255, 255, 255, 0.5)',\r\n        // }),\r\n        stroke: new Stroke({\r\n            color: '#ff00ff',\r\n            width: 2,\r\n        })\r\n    })\r\n}), parapete = new VectorLayer({\r\n    title: \"Parapete\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=parapete',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: new Style({\r\n        // fill: new Fill({\r\n        //     color: 'rgba(255, 255, 255, 0.5)',\r\n        // }),\r\n        stroke: new Stroke({\r\n            color: '#00ffff',\r\n            width: 2,\r\n        })\r\n    })\r\n}), podete = new VectorLayer({\r\n    title: \"Podete\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=podete',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: layersStyle\r\n}), poduri_ = new VectorLayer({\r\n    title: \"Poduri_\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=poduri_',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: new Style({\r\n        fill: new Fill({\r\n            color: 'rgba(255, 255, 255, 0.5)',\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#ffff00',\r\n            width: 2,\r\n        })\r\n    })\r\n}), santuri = new VectorLayer({\r\n    title: \"Santuri\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=santuri',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: new Style({\r\n        // fill: new Fill({\r\n        //     color: 'rgba(255, 255, 255, 0.5)',\r\n        // }),\r\n        stroke: new Stroke({\r\n            color: '#ff0000',\r\n            width: 2,\r\n        })\r\n    })\r\n}), traseu_info = new VectorLayer({\r\n    title: \"Traseu Info\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=traseu_info',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: new Style({\r\n        // fill: new Fill({\r\n        //     color: 'rgba(255, 255, 255, 0.5)',\r\n        // }),\r\n        stroke: new Stroke({\r\n            color: '#00ff00',\r\n            width: 2,\r\n        })\r\n    })\r\n}), zid_sprijin = new VectorLayer({\r\n    title: \"Zid Sprijin\",\r\n    visible: false,\r\n    source: new VectorSource({\r\n        format: new GeoJSON(),\r\n        url: 'https://cadsysdj.terra-apps.com/AdminApi/wfs.php?layername=zid_sprijin',\r\n        strategy: bboxStrategy,\r\n    }),\r\n    style: new Style({\r\n        // fill: new Fill({\r\n        //     color: 'rgba(255, 255, 255, 0.5)',\r\n        // }),\r\n        stroke: new Stroke({\r\n            color: '#0000ff',\r\n            width: 2,\r\n        })\r\n    })\r\n});\r\n\r\nconst style = new Style({\r\n    fill: new Fill({\r\n        color: 'rgba(255, 255, 255, 0.2)',\r\n    }),\r\n    stroke: new Stroke({\r\n        color: 'rgba(255, 204, 51, 1)',\r\n        lineDash: [10, 10],\r\n        width: 2,\r\n    }),\r\n    image: new CircleStyle({\r\n        radius: 5,\r\n        stroke: new Stroke({\r\n            color: 'rgba(0, 0, 0, 0.7)',\r\n        }),\r\n        fill: new Fill({\r\n            color: 'rgba(255, 255, 255, 0.2)',\r\n        }),\r\n    }),\r\n});\r\n\r\nconst labelStyle = new Style({\r\n    text: new Text({\r\n        font: '14px Calibri',\r\n        fill: new Fill({\r\n            color: 'rgba(255, 255, 255, 1)',\r\n        }),\r\n        backgroundFill: new Fill({\r\n            color: 'rgba(0, 0, 0, 0.7)',\r\n        }),\r\n        padding: [3, 3, 3, 3],\r\n        textBaseline: 'bottom',\r\n        offsetY: -15,\r\n    }),\r\n    image: new RegularShape({\r\n        radius: 8,\r\n        points: 3,\r\n        angle: Math.PI,\r\n        displacement: [0, 10],\r\n        fill: new Fill({\r\n            color: 'rgba(0, 0, 0, 0.7)',\r\n        }),\r\n    }),\r\n});\r\n\r\nconst tipStyle = new Style({\r\n    text: new Text({\r\n        font: '12px Calibri',\r\n        fill: new Fill({\r\n            color: 'rgba(255, 255, 255, 1)',\r\n        }),\r\n        backgroundFill: new Fill({\r\n            color: 'rgba(0, 0, 0, 0.8)',\r\n        }),\r\n        padding: [2, 2, 2, 2],\r\n        textAlign: 'left',\r\n        offsetX: 15,\r\n    }),\r\n});\r\n\r\nconst modifyStyle = new Style({\r\n    image: new CircleStyle({\r\n        radius: 5,\r\n        stroke: new Stroke({\r\n            color: 'rgba(0, 0, 0, 0.7)',\r\n        }),\r\n        fill: new Fill({\r\n            color: 'rgba(0, 0, 0, 0.4)',\r\n        }),\r\n    }),\r\n    text: new Text({\r\n        text: 'Drag to modify',\r\n        font: '12px Calibri',\r\n        fill: new Fill({\r\n            color: 'rgba(255, 255, 255, 1)',\r\n        }),\r\n        backgroundFill: new Fill({\r\n            color: 'rgba(0, 0, 0, 0.7)',\r\n        }),\r\n        padding: [2, 2, 2, 2],\r\n        textAlign: 'left',\r\n        offsetX: 15,\r\n    }),\r\n});\r\n\r\nconst segmentStyle = new Style({\r\n    text: new Text({\r\n        font: '12px Calibri',\r\n        fill: new Fill({\r\n            color: 'rgba(255, 255, 255, 1)',\r\n        }),\r\n        backgroundFill: new Fill({\r\n            color: 'rgba(255, 204, 51, 1)',\r\n        }),\r\n        padding: [2, 2, 2, 2],\r\n        textBaseline: 'bottom',\r\n        offsetY: -12,\r\n    }),\r\n    image: new RegularShape({\r\n        radius: 6,\r\n        points: 3,\r\n        angle: Math.PI,\r\n        displacement: [0, 8],\r\n        fill: new Fill({\r\n            color: 'rgba(0, 0, 0, 0.4)',\r\n        }),\r\n    }),\r\n});\r\n\r\nconst segmentStyles = [segmentStyle];\r\n\r\nconst formatLength = function (line) {\r\n    const length = getLength(line);\r\n    let output;\r\n    if (length > 100) {\r\n        output = Math.round((length / 1000) * 100) / 100 + ' km';\r\n    } else {\r\n        output = Math.round(length * 100) / 100 + ' m';\r\n    }\r\n    return output;\r\n};\r\n\r\nconst formatArea = function (polygon) {\r\n    const area = getArea(polygon);\r\n    let output;\r\n    if (area > 10000) {\r\n        output = Math.round((area / 1000000) * 100) / 100 + ' km\\xB2';\r\n    } else {\r\n        output = Math.round(area * 100) / 100 + ' m\\xB2';\r\n    }\r\n    return output;\r\n};\r\n\r\nconst drawSource = new VectorSource();\r\n\r\nconst modify = new Modify({ source: drawSource, style: modifyStyle });\r\n\r\nlet tipPoint;\r\n\r\nfunction styleFunction(feature, segments, drawType, tip) {\r\n    const styles = [style];\r\n    const geometry = feature.getGeometry();\r\n    const type = geometry.getType();\r\n    let point, label, line;\r\n    if (!drawType || drawType === type) {\r\n        if (type === 'Polygon') {\r\n            point = geometry.getInteriorPoint();\r\n            label = formatArea(geometry);\r\n            line = new LineString(geometry.getCoordinates()[0]);\r\n        } else if (type === 'LineString') {\r\n            point = new Point(geometry.getLastCoordinate());\r\n            label = formatLength(geometry);\r\n            line = geometry;\r\n        }\r\n    }\r\n\r\n    if (segments && line) {\r\n        let count = 0;\r\n        line.forEachSegment(function (a, b) {\r\n            const segment = new LineString([a, b]);\r\n            const label = formatLength(segment);\r\n            if (segmentStyles.length - 1 < count) {\r\n                segmentStyles.push(segmentStyle.clone());\r\n            }\r\n            const segmentPoint = new Point(segment.getCoordinateAt(0.5));\r\n            segmentStyles[count].setGeometry(segmentPoint);\r\n            segmentStyles[count].getText().setText(label);\r\n            styles.push(segmentStyles[count]);\r\n            count++;\r\n        });\r\n    }\r\n\r\n    if (label) {\r\n        labelStyle.setGeometry(point);\r\n        labelStyle.getText().setText(label);\r\n        styles.push(labelStyle);\r\n    }\r\n\r\n    if (tip && type === 'Point' && !modify.getOverlay().getSource().getFeatures().length) {\r\n        tipPoint = geometry;\r\n        tipStyle.getText().setText(tip);\r\n        styles.push(tipStyle);\r\n    }\r\n    return styles;\r\n}\r\n\r\nconst drawLayer = new VectorLayer({\r\n    title: 'Drawing',\r\n    displayInLayerSwitcher: false,\r\n    source: drawSource,\r\n    style: function (feature) {\r\n        return styleFunction(feature, true);\r\n    },\r\n});\r\n\r\nfunction Home() {\r\n    const [map, setMap] = useState()\r\n    const { rootState, logoutUser } = useContext(MyContext);\r\n    const { isAuth, theUser, showLogin } = rootState;\r\n\r\n\r\n    const mapElement = useRef()\r\n    const mapRef = useRef()\r\n    mapRef.current = map\r\n\r\n    useEffect(() => {\r\n        console.log('load now');\r\n        layers = new LayerGroup({\r\n            title: 'Datasets',\r\n            openInLayerSwitcher: false,\r\n            layers: [\r\n                zid_sprijin,\r\n                traseu_info,\r\n                santuri,\r\n                poduri_,\r\n                podete,\r\n                parapete,\r\n                localitati_traversate,\r\n                limite_uat_bacau,\r\n                limite_pug_bacau,\r\n                intersectii_dr,\r\n                intersectii_cfr,\r\n                indicatoare_rutiere,\r\n                imbracaminte_drum,\r\n                borne_existente,\r\n                borne_estimate,\r\n                anexe_and,\r\n                acostamente\r\n            ]\r\n        })\r\n\r\n        basemaps = new LayerGroup({\r\n            title: 'Basemaps',\r\n            openInLayerSwitcher: true,\r\n            layers: [\r\n                new TileLayer({\r\n                    baseLayer: true,\r\n                    title: \"OSM\",\r\n                    visible: false,\r\n                    source: new OSM()\r\n                }),\r\n                new TileLayer({\r\n                    baseLayer: true,\r\n                    title: \"Mapbox\",\r\n                    visible: true,\r\n                    source: new XYZ({\r\n                        tileSize: [512, 512],\r\n                        url: 'https://api.mapbox.com/styles/v1/mapbox/streets-v8/tiles/{z}/{x}/{y}?access_token=' + mapboxKey\r\n                    })\r\n                }),\r\n                new TileLayer({\r\n                    title: \"Bing\",\r\n                    baseLayer: true,\r\n                    visible: false,\r\n                    preload: Infinity,\r\n                    source: new BingMaps({\r\n                        key: 'Ai9y3x8v0FM1vGDUXevZDinOzkJVacIW8kJOtSwUDNn8WGpE0ZjxZPJttvIYZg5L',\r\n                        imagerySet: \"AerialWithLabels\"\r\n                    }),\r\n                })\r\n            ]\r\n        });\r\n        layers = [\r\n            basemaps,\r\n            layers,\r\n            drawLayer,\r\n        ];\r\n\r\n        if (window.location.hash !== '') {\r\n            // try to restore center, zoom-level and rotation from the URL\r\n            const hash = window.location.hash.replace('#map=', '');\r\n            const parts = hash.split('/');\r\n            if (parts.length === 4) {\r\n                zoom = parseFloat(parts[0]);\r\n                center = [parseFloat(parts[1]), parseFloat(parts[2])];\r\n                rotation = parseFloat(parts[3]);\r\n            }\r\n        }\r\n\r\n        initialMap = new Map({\r\n            target: mapElement.current,\r\n            layers: layers,\r\n            view: new View({\r\n                projection: proj31700,\r\n                center: center,\r\n                zoom: zoom\r\n            }),\r\n            controls: defaultControls().extend([]),\r\n        })\r\n\r\n        setMap(initialMap);\r\n\r\n        initialMap.on(\"pointermove\", function (evt) {\r\n            var hit = this.forEachFeatureAtPixel(evt.pixel, function (feature, layer) {\r\n                return true;\r\n            });\r\n            if (hit) {\r\n                this.getTargetElement().style.cursor = 'pointer';\r\n            } else {\r\n                this.getTargetElement().style.cursor = '';\r\n            }\r\n        });\r\n\r\n        let shouldUpdate = true;\r\n        const view = initialMap.getView();\r\n        const updatePermalink = function () {\r\n            if (!shouldUpdate) {\r\n                // do not update the URL when the view was changed in the 'popstate' handler\r\n                shouldUpdate = true;\r\n                return;\r\n            }\r\n\r\n            const center = view.getCenter();\r\n            const hash =\r\n                '#map=' +\r\n                view.getZoom().toFixed(2) +\r\n                '/' +\r\n                center[0].toFixed(2) +\r\n                '/' +\r\n                center[1].toFixed(2) +\r\n                '/' +\r\n                view.getRotation();\r\n            const state = {\r\n                zoom: view.getZoom(),\r\n                center: view.getCenter(),\r\n                rotation: view.getRotation(),\r\n            };\r\n            window.history.pushState(state, 'map', hash);\r\n        };\r\n\r\n        initialMap.on('moveend', updatePermalink);\r\n\r\n        window.addEventListener('popstate', function (event) {\r\n            if (event.state === null) {\r\n                return;\r\n            }\r\n            initialMap.getView().setCenter(event.state.center);\r\n            initialMap.getView().setZoom(event.state.zoom);\r\n            initialMap.getView().setRotation(event.state.rotation);\r\n            shouldUpdate = false;\r\n        });\r\n\r\n        // initialMap.on('click', handleMapClick)\r\n\r\n\r\n        // myModule.createGPS(initialMap);\r\n        myModule.createLayerSwitcher(initialMap);\r\n        // myModule.createOverview(initialMap);\r\n        myModule.createScale(initialMap);\r\n        // myModule.createSearch(initialMap);\r\n        // myModule.createSideMenu(initialMap);\r\n        myModule.createProgressBar(initialMap);\r\n        // myModule.createCustomButtons(initialMap);\r\n        // myModule.createHoverAndSelect(initialMap);\r\n    }, [isAuth])\r\n\r\n    // If user Logged in\r\n    if (isAuth) {\r\n        return (\r\n            <>\r\n                <div className=\"maincontainer\">\r\n                    <nav className=\"navbar navbar-expand-md navbar-light bg-primary\">\r\n                        <img width={30} height={30} src={logo} alt=\"logo\" />\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                            {/* <ul className=\"nav navbar-nav ml-auto\">\r\n                                <li className=\"nav-item active\">\r\n                                    <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" href=\"#\">Features</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" href=\"#\">Pricing</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n                                </li>\r\n                            </ul> */}\r\n                        </div>\r\n\r\n                        <div className=\"justify-content-center\" id=\"navbarNavDropdown\">\r\n                            <div className=\"navbar-nav ml-auto text-white\">\r\n                                Weclome {theUser.name},&nbsp;\r\n                                <i className=\"fa fa-sign-out\" onClick={logoutUser} style={{ marginTop: \"5px\", cursor: \"pointer\" }}></i>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                    <div className=\"container\">\r\n                        <div id=\"map\" ref={mapElement} style={{ width: \"100vw\", height: \"100vh\", left: 0, position: 'fixed' }}>\r\n                        </div>\r\n                        {/* <div className=\"userInfo\">\r\n                            <div className=\"_img\"><span role=\"img\" aria-label=\"User Image\">👦</span></div>\r\n                            <h1>{theUser.name}</h1>\r\n                            <div className=\"_email\"><span>{theUser.email}</span></div>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n                <div style={{ position: 'absolute', bottom: 0, width: \"100vw\", textAlign: 'center', background: \"#0D6EFD\", color: \"white\", padding: \"3px\" }}>\r\n                    © Copyright 2021-2022\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    // Showing Login Or Register Page According to the condition\r\n    else if (showLogin) {\r\n        return <Login />;\r\n    }\r\n    else {\r\n        return <Register />;\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n\r\nlet myModule = {\r\n    createSearch: function (map) {\r\n        let search = new SearchNominatim({\r\n            polygon: true,\r\n            reverse: false,\r\n            position: true\r\n        });\r\n        map.addControl(search);\r\n\r\n        search.on('select', function (e) {\r\n            sLayer.getSource().clear();\r\n            if (e.search.geojson) {\r\n                var format = new GeoJSON();\r\n                var f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\r\n                sLayer.getSource().addFeature(f);\r\n                var view = map.getView();\r\n                var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\r\n                var zoom = view.getZoomForResolution(resolution);\r\n                var center = olExtent.getCenter(f.getGeometry().getExtent());\r\n                // redraw before zoom\r\n                setTimeout(function () {\r\n                    view.animate({\r\n                        center: center,\r\n                        zoom: Math.min(zoom, 16)\r\n                    });\r\n                }, 100);\r\n            }\r\n            else {\r\n                map.getView().animate({\r\n                    center: e.coordinate,\r\n                    zoom: Math.max(map.getView().getZoom(), 16)\r\n                });\r\n            }\r\n        });\r\n    },\r\n    createSideMenu: function (map) {\r\n        let sideMenu = new Overlay({\r\n            closeBox: true,\r\n            className: \"slide-left menu\",\r\n            content: $(\"#menu\").get(0)\r\n        });\r\n        map.addControl(sideMenu);\r\n\r\n        // A toggle control to show/hide the menu\r\n        var t = new Toggle(\r\n            {\r\n                html: '<i class=\"fa fa-bars\" ></i>',\r\n                className: \"menu\",\r\n                title: \"Menu\",\r\n                onToggle: function () { sideMenu.toggle(); }\r\n            });\r\n        map.addControl(t);\r\n    },\r\n    createCustomButtons: function (map) {\r\n        // var selectCtrl = new Toggle(\r\n        //     {\r\n        //         // html: $(\"#length\").get(0),\r\n        //         // className: \"select\",\r\n        //         title: \"Select\",\r\n        //         interaction: new Select(),\r\n        //         active: true,\r\n        //         onToggle: function (active) {\r\n        //             $(\"#info\").text(\"Select is \" + (active ? \"activated\" : \"deactivated\"));\r\n        //         }\r\n        //     });\r\n        // var pedit = new Toggle(\r\n        //     {\r\n        //         html: $(\"#area\").get(0),\r\n        //         className: \"edit\",\r\n        //         title: 'Point',\r\n        //         interaction: new Draw\r\n        //             ({\r\n        //                 type: 'Point',\r\n        //                 // source: vector.getSource()\r\n        //             }),\r\n        //         onToggle: function (active) {\r\n        //             $(\"#info\").text(\"Edition is \" + (active ? \"activated\" : \"deactivated\"));\r\n        //         }\r\n        //     });\r\n        // map.addControl(pedit);\r\n        // map.addControl(selectCtrl);\r\n    },\r\n    createOverview: function (map) {\r\n        let overview = new Overview({\r\n            projection: \"EPSG:4326\",\r\n            layers: [new TileLayer({ source: new OSM() })]\r\n        });\r\n        map.addControl(overview);\r\n    },\r\n    createScale: function (map) {\r\n        let scale = new Scale({ editable: false });\r\n        map.addControl(scale);\r\n    },\r\n    createHoverAndSelect: function (map) {\r\n        const hoverCtrl = new Select({\r\n            condition: pointerMove,\r\n            style: hoverStyle\r\n        });\r\n        const selectCtrl = new Select({\r\n            condition: click,\r\n            style: clickStyle\r\n        });\r\n        map.addInteraction(hoverCtrl);\r\n        map.addInteraction(selectCtrl);\r\n\r\n\r\n        selectCtrl.on('select', function (e) {\r\n            // console.log(e.selected);\r\n            setselectedFeature = [];\r\n            setselectedFeature.push(e.selected[0]);\r\n        });\r\n    },\r\n    createProgressBar: function (map) {\r\n        // console.log(basemaps.getLayers().array_);\r\n        let progressBar = new pb({\r\n            label: '...',\r\n            layers: basemaps.getLayers().array_\r\n        });\r\n        map.addControl(progressBar);\r\n    },\r\n    createGPS: function (map) {\r\n        let gps = new GeolocationButton({\r\n            title: 'Where am I?',\r\n            delay: 2000\r\n        });\r\n        map.addControl(gps);\r\n\r\n\r\n        // Show position\r\n        var here = new Popup({ positioning: 'bottom-center' });\r\n        map.addOverlay(here);\r\n        gps.on('position', function (e) {\r\n            if (e.coordinate) here.show(e.coordinate, \"You are<br/>here!\");\r\n            else here.hide();\r\n        });\r\n    },\r\n    createLayerSwitcher: function (map) {\r\n        let switcher = new LayerSwitcher({\r\n            // oninfo: function (l) {\r\n            //     $('.options').html(l.get('title') + '<br/>');\r\n            //     switch (l.get('title')) {\r\n            //         case 'GEOLOGIE':\r\n            //             $('<img>').appendTo($('.options'))\r\n            //                 .attr('src', 'http://geoservices.brgm.fr/geologie?language=fre&version=1.3.0&service=WMS&request=GetLegendGraphic&sld_version=1.1.0&layer=GEOSERVICES_GEOLOGIE&format=image/png&STYLE=default');\r\n            //             break;\r\n            //         default:\r\n            //             break;\r\n            //     }\r\n            // },\r\n            target: $(\".menu-switcher\").get(0)\r\n        });\r\n        map.addControl(switcher);\r\n\r\n        switcher.on('drawlist', (e) => {\r\n            var layer = e.layer;\r\n            e.li.querySelector('label').addEventListener('click', () => {\r\n                // console.log(layer.getVisible());\r\n                selectedBaseMap = layer.get('title');\r\n                // if (selectedBaseMap == \"Properties Boundaries\")\r\n                //     santuriWMS.setVisible(layer.getVisible());\r\n                // if (selectedBaseMap == \"Zoning\")\r\n                //     addLegendContent('<div id=\"zoning\"><table><tr><td><a id=\"statesImg\" onclick=\"' + removeLayer('zoning') + '\"><img height=\"15px\" width=\"15px\" src=\"' + remove + '\"></a></td><td><input type=\"checkbox\" id=\"' + selectedBaseMap + '\" onchange=\"' + handlelegend('zoning') + '\" checked/></td><td><h3>' + selectedBaseMap + '</h3></td></tr><tr><td><div style=\"background-color: #FEDAE4; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>LDR - Low density residential</td></tr><tr><td><div style=\"background-color: #EDAFE0; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>CR1 - Character</td></tr><tr><td><div style=\"background-color: #EDAFE0; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>CR2 - Infill housing</td></tr><tr><td><div style=\"background-color: #EDAFE0; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>LMR1 - Low-medium density residential (2 storey mix)</td></tr><tr><td><div style=\"background-color: #EDAFE0; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>LMR2 - Low-medium density residential (2 or 3 storey mix)</td></tr><tr><td><div style=\"background-color: #EDAFE0; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>LMR3 - Low-medium density residential (Up to 3 storeys)</td></tr><tr><td><div style=\"background-color: #F76677; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>MDR - Medium density residential</td></tr><tr><td><div style=\"background-color: #A30001; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>HDR1 - High density residential (Up to 8 storeys)</td></tr><tr><td><div style=\"background-color: #A30001; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>HDR2 - High density residential (Up to 15 storeys)</td></tr><tr><td><div style=\"background-color: #FF4A28; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>TA - Tourist accommodation</td></tr><tr><td><div style=\"background-color: #CDE4FF; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>NC - Neighbourhood centre</td></tr><tr><td><div style=\"background-color: #6C7CAD; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>DC1 - District</td></tr><tr><td><div style=\"background-color: #6C7CAD; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>DC2 - Corridor</td></tr><tr><td><div style=\"background-color: #4670F6; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>MC - Major centre</td></tr><tr><td><div style=\"background-color: #0D31FF; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>PC1 - Principal centre (City centre)</td></tr><tr><td><div style=\"background-color: #0D31FF; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>PC2 - Principal centre (Regional centre)</td></tr><tr><td><div style=\"background-color: #E6C8D4; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>LII - Low impact industry</td></tr><tr><td><div style=\"background-color: #C2A9ED; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>IN1 - General industry A</td></tr><tr><td><div style=\"background-color: #C2A9ED; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>IN2 - General industry B</td></tr><tr><td><div style=\"background-color: #C2A9ED; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>IN3 - General industry C</td></tr><tr><td><div style=\"background-color: #922590; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>SI - Special industry</td></tr><tr><td><div style=\"background-color: #C6B0DE; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>II - Industry investigation</td></tr><tr><td><div style=\"background-color: #A8E4CB; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>SR - Sport and recreation</td></tr><tr><td><div style=\"background-color: #B5D9E9; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SR1 - Sport and recreation (Local)</td></tr><tr><td><div style=\"background-color: #B5D9E9; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SR2 - Sport and recreation (District)</td></tr><tr><td><div style=\"background-color: #B5D9E9; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SR3 - Sport and recreation (Metropolitan)</td></tr><tr><td><div style=\"background-color: #6DAB62; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>OS - Open space</td></tr><tr><td><div style=\"background-color: #66B04F; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>OS1 - Open space (Local)</td></tr><tr><td><div style=\"background-color: #66B04F; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>OS2 - Open space (District)</td></tr><tr><td><div style=\"background-color: #66B04F; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>OS3 - Open space (Metropolitan)</td></tr><tr><td><div style=\"background-color: #248700; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>EM - Environmental management</td></tr><tr><td><div style=\"background-color: #3B968D; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>CN - Conservation</td></tr><tr><td><div style=\"background-color: #3883A2; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>CN1 - Local</td></tr><tr><td><div style=\"background-color: #3883A2; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>CN2 - District</td></tr><tr><td><div style=\"background-color: #3883A2; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>CN3 - Metropolitan</td></tr><tr><td><div style=\"background-color: #F9CEA1; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>EC - Emerging community</td></tr><tr><td><div style=\"background-color: #602B00; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>EI - Extractive industry</td></tr><tr><td><div style=\"background-color: #F87213; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>MU1 - Inner city</td></tr><tr><td><div style=\"background-color: #F87213; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>MU2 - Centre frame</td></tr><tr><td><div style=\"background-color: #F87213; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>MU3 - Corridor</td></tr><tr><td><div style=\"background-color: #9E7B77; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>RU - Rural</td></tr><tr><td><div style=\"background-color: #F4FCE4; height: 15px; width: 15px; border: 1px solid black;\" /></td><td>T - Township</td></tr><tr><td><div style=\"background-color: #F7FF89; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>CF1 - Major health care</td></tr><tr><td><div style=\"background-color: #F7FF89; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>CF2 - Major sports venue</td></tr><tr><td><div style=\"background-color: #F7FF89; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>CF3 - Cemetery</td></tr><tr><td><div style=\"background-color: #F7FF89; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>CF4 - Community purpose</td></tr><tr><td><div style=\"background-color: #F7FF89; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>CF5 - Education purpose</td></tr><tr><td><div style=\"background-color: #F7FF89; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>CF6 - Emergency services</td></tr><tr><td><div style=\"background-color: #F7FF89; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>CF7 - Health care purposes</td></tr><tr><td><div style=\"background-color: #877A8E; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SC1 - Specialised centre (Major education and research facility)</td></tr><tr><td><div style=\"background-color: #877A8E; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SC2 - Specialised centre (Entertainment and conference centre)</td></tr><tr><td><div style=\"background-color: #877A8E; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SC3 - Specialised centre (Brisbane Markets)</td></tr><tr><td><div style=\"background-color: #877A8E; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SC4 - Specialised centre (Large format retail)</td></tr><tr><td><div style=\"background-color: #877A8E; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SC5 - Specialised centre (Mixed industry and business)</td></tr><tr><td><div style=\"background-color: #877A8E; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SC6 - Specialised centre (Marina)</td></tr><tr><td><div style=\"background-color: #B9C203; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SP1 - Special purpose (Defence)</td></tr><tr><td><div style=\"background-color: #B9C203; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SP2 - Special purpose (Detention facility)</td></tr><tr><td><div style=\"background-color: #B9C203; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SP3 - Special purpose (Transport infrastructure)</td></tr><tr><td><div style=\"background-color: #B9C203; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SP4 - Special purpose (Utility services)</td></tr><tr><td><div style=\"background-color: #B9C203; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SP5 - Special purpose (Airport)</td></tr><tr><td><div style=\"background-color: #B9C203; height: 15px; width: 15px; border: 1px solid blue;\" /></td><td>SP6 - Special purpose (Port)</td></tr></table></div>', true, \"legend\");\r\n                // console.log(selectedBaseMap);\r\n                // console.log(layer.get('title') + ' visible: ' + layer.getVisible());\r\n            });\r\n        });\r\n\r\n        // The serach input\r\n        var search = $(\"<input>\").attr(\"placeholder\", \"filter\");\r\n        $(\".menu-switcher-header\").append(search.get(0));\r\n    },\r\n    createOverlayMenu: function (map) {\r\n        // Overlay\r\n        var menu = new Overlay({\r\n            closeBox: true,\r\n            className: \"slide-left menu\",\r\n            content: $(\"#menu\").get(0)\r\n        });\r\n        map.addControl(menu);\r\n\r\n        // A toggle control to show/hide the menu\r\n        var t = new Toggle({\r\n            html: \"M\",\r\n            className: \"menu\",\r\n            title: \"Menu\",\r\n            onToggle: function () {\r\n                menu.toggle();\r\n            }\r\n        });\r\n\r\n        let menu_control = $('<div className=\"menu-control\">');\r\n        let menu_switcher_header = $('<div className=\"menu-switcher-header\"><div>');\r\n        let menu_switcher = $('<div className=\"menu-switcher\">');\r\n        let menu_info = $('<div className=\"menu-info\">');\r\n\r\n        $(\".menu\").append(menu_control);\r\n        $(\".menu\").append(menu_switcher_header);\r\n        $(\".menu\").append(menu_switcher);\r\n        $(\".menu\").append(menu_info);\r\n\r\n        map.addControl(t);\r\n    },\r\n    createDefaultActions: function (map) {\r\n        var selectSingleClick = new Select();\r\n        var selectClick = new Select({\r\n            condition: click\r\n        });\r\n\r\n        var selectPointerMove = new Select({\r\n            condition: pointerMove\r\n        });\r\n        map.addInteraction(selectSingleClick);\r\n        map.addInteraction(selectClick);\r\n        map.addInteraction(selectPointerMove);\r\n    },\r\n    createSelectAttributes: function (map) {\r\n        // Select control\r\n        var selectCtrl = new ext_Select({\r\n            target: $(\".menu\").get(0),\r\n            //source: vectorSource,\r\n            property: $(\".options select\").val()\r\n        });\r\n        map.addControl(selectCtrl);\r\n    },\r\n    createPopupOverlay: function (map) {\r\n        let placemark = [\r\n            new Popup({\r\n                // className: \"dragPopup-container\",\r\n                position: [0, 6000000],\r\n                closeBox: true,\r\n                positioning: \"bottom-center\",\r\n                html: \"Move<br/>me!\",\r\n\r\n                stopEvent: false\r\n            }),\r\n            new Placemark({\r\n                position: [0, 5600000],\r\n                stopEvent: false\r\n            })\r\n        ];\r\n\r\n        placemark.forEach(function (p) {\r\n            map.addOverlay(p);\r\n        });\r\n\r\n        // Drag interaction\r\n\r\n        var drag = new ext_Drag({\r\n            overlays: placemark\r\n        });\r\n        console.log(drag);\r\n        map.addInteraction(drag);\r\n\r\n        drag.on(\"dragend\", function (e) {\r\n            console.log(e);\r\n            if (e.overlay === placemark[1]) {\r\n                // Animate placemark\r\n                placemark[1].show(true);\r\n            }\r\n        });\r\n    },\r\n    createMeasures: function (map) {\r\n        var drawLine = new Draw({ type: \"LineString\" });\r\n        let mSource = new VectorSource({});\r\n        let mLayer = new VectorLayer({\r\n            source: mSource,\r\n            title: \"meas\"\r\n        });\r\n        map.addLayer(mLayer);\r\n        map.addInteraction(drawLine);\r\n        var drawPoly = new Draw({ type: \"Polygon\" });\r\n        map.addInteraction(drawPoly);\r\n        drawPoly.setActive(false);\r\n        drawLine.setActive(false);\r\n        // Add a tooltip\r\n        var tooltip = new Tooltip();\r\n        map.addOverlay(tooltip);\r\n\r\n        // Set feature on drawstart\r\n        drawLine.on(\"drawstart\", tooltip.setFeature.bind(tooltip));\r\n        // Remove feature on finish\r\n        drawLine.on(\r\n            [\"change:active\", \"drawend\"],\r\n            tooltip.removeFeature.bind(tooltip)\r\n        );\r\n    },\r\n    createLegend: function (map) { }\r\n};","// import { Provider } from \"./Context\";\r\n// import Form from \"./components/Form\";\r\n// import UserList from \"./components/UserList\";\r\n// import { Actions } from \"./Actions\";\r\n// function App() {\r\n//   const data = Actions();\r\n//   return (\r\n//     <Provider value={data}>\r\n//       <div className=\"App\">\r\n//         <div className=\"wrapper\">\r\n//           <section className=\"left-side\">\r\n//             <Form />\r\n//           </section>\r\n//           <section className=\"right-side\">\r\n//             <UserList />\r\n//           </section>\r\n//         </div>\r\n//       </div>\r\n//     </Provider>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\nimport React from 'react';\r\nimport MyContextProvider from './contexts/MyContext';\r\nimport Home from './components/Home'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <MyContextProvider>\r\n      <Home />\r\n    </MyContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}